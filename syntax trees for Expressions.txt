#include<stdio.h>
#include<stdlib.h>

typedef struct node {
    char value;
    struct node *left;
    struct node *right;
} Node;

Node* createNode(char value, Node* left, Node* right) {
    Node* node = (Node*)malloc(sizeof(Node));
    node->value = value;
    node->left = left;
    node->right = right;
    return node;
}

void printSyntaxTree(Node* node, int depth) {
    if (node == NULL) {
        return;
    }
    printSyntaxTree(node->right, depth + 1);
    int i;
    for (i = 0; i < depth; i++) {
        printf("    ");
    }
    printf("%c\n", node->value);
    printSyntaxTree(node->left, depth + 1);
}

int main() {
    // Create the syntax tree for "a + b * c"
    Node* c = createNode('c', NULL, NULL);
    Node* b = createNode('b', NULL, NULL);
    Node* a = createNode('a', NULL, NULL);
    Node* multiply = createNode('*', b, c);
    Node* add = createNode('+', a, multiply);
    
    // Print the syntax tree
    printf("Syntax tree for \"a + b * c\"\n");
    printSyntaxTree(add, 0);
    
    return 0;
}
